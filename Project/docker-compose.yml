version: '3.5'

networks:
  app_network:
    name: app_network

services:
  # Kafka(-related) setup
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: zookeeper
    networks:
      - app_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:5.5.1
    container_name: broker
    depends_on:
      - zookeeper
    networks:
      - app_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  tweet-reader:
    build: tweet-reader/
    container_name: tweet_reader
    depends_on:
      - zookeeper
      - broker
    networks:
      - app_network
    entrypoint:
      - bash
      - -c
      - |
        echo 'Giving Kafka a bit of time to start up…'
        sleep 30
        # Run the client code
        python /tweet_producer.py

  #The spark streaming, consuming from Kafka
  #and outputting to PostGreSql
  spark-streaming-etl:
    build: spark-streaming-etl/
    container_name: tweet_consumer
    depends_on:
      - zookeeper
      - broker
    networks:
      - app_network
    entrypoint:
      - bash
      - -c
      - |
        echo 'Giving Kafka a bit of time to start up…'
        sleep 30
        # Run the client code
        python /test_tweet_consumer.py
